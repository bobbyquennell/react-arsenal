module.exports = [{"name":"Button","description":"A resuable Button component support customized styling","props":{"className":{"type":{"name":"string"},"required":false,"description":"your own style classnames"},"name":{"type":{"name":"string"},"required":false,"description":"name of your button","defaultValue":{"value":"\"Click Me\"","computed":false}},"onClick":{"type":{"name":"func"},"required":true,"description":"Click event handler"}},"code":"\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.scss';\nimport classnames from 'classnames';\n\n/** A resuable Button component support customized styling */\nconst Button = ({className, name, onClick, disabled})=>{\n  return(\n    <button className={classnames({\n      [styles.root]: true,\n      [className]: className\n    })} onClick={onClick} disabled={disabled}>{name}</button>\n  );\n};\n\nButton.propTypes = {\n  /** your own style classnames */\n  className: PropTypes.string,\n  /** name of your button */\n  name: PropTypes.string.isRequired,\n  /** Click event handler */\n  onClick: PropTypes.func.isRequired\n};\n\nButton.defaultProps = {\n  name: \"Click Me\"\n};\nexport default Button;\n","examples":[{"name":"ExampleButton","description":"","code":"\nimport React from 'react';\nimport Button from 'react-arsenal/Button';\n\n\nconst clickHandler = ()=>{\n  console.log(\"clicked\");\n};\nconst ExampleButton = function(){\n  return (<Button onClick={clickHandler}/>);\n};\n\nexport default ExampleButton;\n"}]},{"name":"Grid","description":"The container for CSS3 flexbox display modules","props":{"container":{"type":{"name":"bool"},"required":false,"description":"the container flag, true: flexbox container.","defaultValue":{"value":"true","computed":false}},"direction":{"type":{"name":"enum","value":[{"value":"'row'","computed":false},{"value":"'row-reverse'","computed":false},{"value":"'column'","computed":false},{"value":"'column-reverse'","computed":false}]},"required":false,"description":"Defines the `flex-direction` style property.\nIt is applied for all screen sizes.\n   'row', 'row-reverse', 'column', 'column-reverse'","defaultValue":{"value":"'row'","computed":false}},"item":{"type":{"name":"bool"},"required":false,"description":"the item flag, true: flexbox item.","defaultValue":{"value":"false","computed":false}},"justify":{"type":{"name":"enum","value":[{"value":"'flex-start'","computed":false},{"value":"'center'","computed":false},{"value":"'flex-end'","computed":false},{"value":"'space-between'","computed":false},{"value":"'space-around'","computed":false}]},"required":false,"description":"Defines the 'justify-content' property for a flexbox container.\n   'flex-start', 'center', 'flex-end', 'space-between', 'space-around'","defaultValue":{"value":"'flex-start'","computed":false}},"alignItems":{"type":{"name":"enum","value":[{"value":"'flex-start'","computed":false},{"value":"'center'","computed":false},{"value":"'flex-end'","computed":false},{"value":"'baseline'","computed":false},{"value":"'stretch'","computed":false}]},"required":false,"description":"Defines the 'align-items' property for a flexbox container.\n   'flex-start', 'center', 'flex-end', 'baseline', 'stretch'","defaultValue":{"value":"'stretch'","computed":false}},"children":{"type":{"name":"node"},"required":true,"description":"the content of the component"}},"code":"import React from 'react';\nimport style from './Grid.scss';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n/**\n* The container for CSS3 flexbox display modules\n */\nconst Grid = (props)=>{\n  const {\n    className: classNameProp,\n    container,\n    direction,\n    justify,\n    alignItems,\n    item,\n    children,\n    ...otherProps\n  } = props;\n\n  const className = classnames(\n    {\n      [style.container]: container,\n      [style.item]: item,\n      [style.row]: direction == Grid.defaultProps.direction,\n      [style.rowreverse]: direction == 'row-reverse',\n      [style.justifystart]: justify == 'flex-start',\n      [style.justifyend]: justify == 'flex-end',\n      [style.justifycenter]: justify == 'center',\n      [style.justifyaround]: justify == 'space-around',\n      [style.justifybetween]: justify == 'space-between',\n      [style.alignitemstart]: alignItems == 'flex-start',\n      [style.alignitemend]: alignItems == 'flex-end',\n      [style.alignitemcenter]: alignItems == 'center',\n      [style.alignitembaseline]: alignItems == 'baseline',\n      [style.alignitemstretch]: alignItems == 'stretch',\n\n    },\n    classNameProp\n  );\n  const gridProps = { className, ...otherProps };\n  return(\n    <div {...gridProps}>\n      {children}\n    </div>\n  );\n};\n\nGrid.propTypes = {\n  /**\n   * the container flag, true: flexbox container.\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   'row', 'row-reverse', 'column', 'column-reverse'\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n  /**\n   * the item flag, true: flexbox item.\n   */\n  item: PropTypes.bool,\n  /**\n   * Defines the 'justify-content' property for a flexbox container.\n   'flex-start', 'center', 'flex-end', 'space-between', 'space-around'\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around']),\n  /**\n   * Defines the 'align-items' property for a flexbox container.\n   'flex-start', 'center', 'flex-end', 'baseline', 'stretch'\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'baseline', 'stretch']),\n  /** the content of the component*/\n  children: PropTypes.node.isRequired\n};\n\nGrid.defaultProps = {\n  container: true,\n  direction: 'row',\n  justify: 'flex-start',\n  alignItems: 'stretch',\n  //alignContent: 'stretch',\n  item: false\n};\nexport default Grid;\n","examples":[{"name":"ExampleGrid","description":"","code":"import React from 'react';\nimport Grid from 'react-arsenal/Grid';\nimport style from './style.scss';\nconst ExampleGrid = function(){\n  return (\n    <Grid className={style.root} justify=\"center\">\n      <Grid item><p>Lorem ipsum</p></Grid>\n      <Grid item><p>Lorem ipsum</p></Grid>\n    </Grid>\n  );\n};\n\nexport default ExampleGrid;\n"}]}]